<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.retech.nyscms.mapper.FrontReadNoteMapper" >
  <resultMap id="BaseResultMap" type="com.retech.nyscms.entity.FrontReadNote" >
    <id column="seqId" property="seqid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="bookId" property="bookid" jdbcType="INTEGER" />
    <result column="chapter" property="chapter" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.retech.nyscms.entity.FrontReadNoteWithBLOBs" extends="BaseResultMap" >
    <result column="originalText" property="originaltext" jdbcType="LONGVARCHAR" />
    <result column="annotation" property="annotation" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    seqId, userId, bookId, chapter, createTime
  </sql>
  <sql id="Blob_Column_List" >
    originalText, annotation
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.retech.nyscms.entity.FrontReadNoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from front_read_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.retech.nyscms.entity.FrontReadNoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from front_read_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from front_read_note
    where seqId = #{seqid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from front_read_note
    where seqId = #{seqid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.retech.nyscms.entity.FrontReadNoteExample" >
    delete from front_read_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" >
    insert into front_read_note (seqId, userId, bookId, 
      chapter, createTime, originalText, 
      annotation)
    values (#{seqid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, 
      #{chapter,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{originaltext,jdbcType=LONGVARCHAR}, 
      #{annotation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" >
    insert into front_read_note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        seqId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="bookid != null" >
        bookId,
      </if>
      <if test="chapter != null" >
        chapter,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="originaltext != null" >
        originalText,
      </if>
      <if test="annotation != null" >
        annotation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        #{seqid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="chapter != null" >
        #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="originaltext != null" >
        #{originaltext,jdbcType=LONGVARCHAR},
      </if>
      <if test="annotation != null" >
        #{annotation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.retech.nyscms.entity.FrontReadNoteExample" resultType="java.lang.Integer" >
    select count(*) from front_read_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update front_read_note
    <set >
      <if test="record.seqid != null" >
        seqId = #{record.seqid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.bookid != null" >
        bookId = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.chapter != null" >
        chapter = #{record.chapter,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.originaltext != null" >
        originalText = #{record.originaltext,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.annotation != null" >
        annotation = #{record.annotation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update front_read_note
    set seqId = #{record.seqid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      bookId = #{record.bookid,jdbcType=INTEGER},
      chapter = #{record.chapter,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      originalText = #{record.originaltext,jdbcType=LONGVARCHAR},
      annotation = #{record.annotation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update front_read_note
    set seqId = #{record.seqid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      bookId = #{record.bookid,jdbcType=INTEGER},
      chapter = #{record.chapter,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update front_read_note
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        bookId = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="chapter != null" >
        chapter = #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="originaltext != null" >
        originalText = #{originaltext,jdbcType=LONGVARCHAR},
      </if>
      <if test="annotation != null" >
        annotation = #{annotation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where seqId = #{seqid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" >
    update front_read_note
    set userId = #{userid,jdbcType=INTEGER},
      bookId = #{bookid,jdbcType=INTEGER},
      chapter = #{chapter,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      originalText = #{originaltext,jdbcType=LONGVARCHAR},
      annotation = #{annotation,jdbcType=LONGVARCHAR}
    where seqId = #{seqid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" >
    update front_read_note
    set userId = #{userid,jdbcType=INTEGER},
      bookId = #{bookid,jdbcType=INTEGER},
      chapter = #{chapter,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where seqId = #{seqid,jdbcType=INTEGER}
  </update>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2019-03-04 11:42:34 ### -->



  <!-- Your codes goes here!!! -->
  
</mapper>
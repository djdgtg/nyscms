<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.retech.nyscms.mapper.FrontIncomeInfoMapper" >
  <resultMap id="BaseResultMap" type="com.retech.nyscms.entity.FrontIncomeInfo" >
    <id column="seqid" property="seqid" jdbcType="INTEGER" />
    
    <!-- 充值类型：0是虚拟币 1赠送积分, 2平台兑换,3赠送的虚拟币,>=4对应的任务类型id -->
    <result column="incomeType" property="incometype" jdbcType="VARCHAR" />
    
    <!-- 币种:0是人民币 1:美元 -->
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    
    <!-- 支付方式：0 充值卡充值  1 支付宝充值，2 微信充值， -->
    <result column="payType" property="paytype" jdbcType="VARCHAR" />
    
    <!-- 虚拟币充值金额 -->
    <result column="virtualMoney" property="virtualmoney" jdbcType="REAL" />
    
    <!-- 赠送人？？？？ -->
    <result column="userName" property="username" jdbcType="VARCHAR" />
    
    <!-- 现金金额 -->
    <result column="payMoney" property="paymoney" jdbcType="REAL" />
    
    <!-- 赠送金额 -->
    <result column="discountMoney" property="discountmoney" jdbcType="REAL" />
    <result column="payTime" property="paytime" jdbcType="TIMESTAMP" />
    
    <!-- 账户id -->
    <result column="accountID" property="accountid" jdbcType="VARCHAR" />
    <result column="addScore" property="addscore" jdbcType="INTEGER" />
    <result column="friendID" property="friendid" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="creatorid" property="creatorid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    seqid, incomeType, currency, payType, virtualMoney, userName, payMoney, discountMoney, 
    payTime, accountID, addScore, friendID, memo, createdtime, creatorid, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.retech.nyscms.entity.FrontIncomeInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from front_income_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from front_income_info
    where seqid = #{seqid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from front_income_info
    where seqid = #{seqid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.retech.nyscms.entity.FrontIncomeInfoExample" >
    delete from front_income_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" >
    insert into front_income_info (seqid, incomeType, currency, 
      payType, virtualMoney, userName, 
      payMoney, discountMoney, payTime, 
      accountID, addScore, friendID, 
      memo, createdtime, creatorid, 
      status)
    values (#{seqid,jdbcType=INTEGER}, #{incometype,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, 
      #{paytype,jdbcType=VARCHAR}, #{virtualmoney,jdbcType=REAL}, #{username,jdbcType=VARCHAR}, 
      #{paymoney,jdbcType=REAL}, #{discountmoney,jdbcType=REAL}, #{paytime,jdbcType=TIMESTAMP}, 
      #{accountid,jdbcType=VARCHAR}, #{addscore,jdbcType=INTEGER}, #{friendid,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{createdtime,jdbcType=TIMESTAMP}, #{creatorid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" >
    insert into front_income_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        seqid,
      </if>
      <if test="incometype != null" >
        incomeType,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="paytype != null" >
        payType,
      </if>
      <if test="virtualmoney != null" >
        virtualMoney,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="paymoney != null" >
        payMoney,
      </if>
      <if test="discountmoney != null" >
        discountMoney,
      </if>
      <if test="paytime != null" >
        payTime,
      </if>
      <if test="accountid != null" >
        accountID,
      </if>
      <if test="addscore != null" >
        addScore,
      </if>
      <if test="friendid != null" >
        friendID,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createdtime != null" >
        createdtime,
      </if>
      <if test="creatorid != null" >
        creatorid,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seqid != null" >
        #{seqid,jdbcType=INTEGER},
      </if>
      <if test="incometype != null" >
        #{incometype,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="virtualmoney != null" >
        #{virtualmoney,jdbcType=REAL},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="paymoney != null" >
        #{paymoney,jdbcType=REAL},
      </if>
      <if test="discountmoney != null" >
        #{discountmoney,jdbcType=REAL},
      </if>
      <if test="paytime != null" >
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountid != null" >
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="addscore != null" >
        #{addscore,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorid != null" >
        #{creatorid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.retech.nyscms.entity.FrontIncomeInfoExample" resultType="java.lang.Integer" >
    select count(*) from front_income_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update front_income_info
    <set >
      <if test="record.seqid != null" >
        seqid = #{record.seqid,jdbcType=INTEGER},
      </if>
      <if test="record.incometype != null" >
        incomeType = #{record.incometype,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.paytype != null" >
        payType = #{record.paytype,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualmoney != null" >
        virtualMoney = #{record.virtualmoney,jdbcType=REAL},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.paymoney != null" >
        payMoney = #{record.paymoney,jdbcType=REAL},
      </if>
      <if test="record.discountmoney != null" >
        discountMoney = #{record.discountmoney,jdbcType=REAL},
      </if>
      <if test="record.paytime != null" >
        payTime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountid != null" >
        accountID = #{record.accountid,jdbcType=VARCHAR},
      </if>
      <if test="record.addscore != null" >
        addScore = #{record.addscore,jdbcType=INTEGER},
      </if>
      <if test="record.friendid != null" >
        friendID = #{record.friendid,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdtime != null" >
        createdtime = #{record.createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorid != null" >
        creatorid = #{record.creatorid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update front_income_info
    set seqid = #{record.seqid,jdbcType=INTEGER},
      incomeType = #{record.incometype,jdbcType=VARCHAR},
      currency = #{record.currency,jdbcType=VARCHAR},
      payType = #{record.paytype,jdbcType=VARCHAR},
      virtualMoney = #{record.virtualmoney,jdbcType=REAL},
      userName = #{record.username,jdbcType=VARCHAR},
      payMoney = #{record.paymoney,jdbcType=REAL},
      discountMoney = #{record.discountmoney,jdbcType=REAL},
      payTime = #{record.paytime,jdbcType=TIMESTAMP},
      accountID = #{record.accountid,jdbcType=VARCHAR},
      addScore = #{record.addscore,jdbcType=INTEGER},
      friendID = #{record.friendid,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      createdtime = #{record.createdtime,jdbcType=TIMESTAMP},
      creatorid = #{record.creatorid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" >
    update front_income_info
    <set >
      <if test="incometype != null" >
        incomeType = #{incometype,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        payType = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="virtualmoney != null" >
        virtualMoney = #{virtualmoney,jdbcType=REAL},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="paymoney != null" >
        payMoney = #{paymoney,jdbcType=REAL},
      </if>
      <if test="discountmoney != null" >
        discountMoney = #{discountmoney,jdbcType=REAL},
      </if>
      <if test="paytime != null" >
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountid != null" >
        accountID = #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="addscore != null" >
        addScore = #{addscore,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        friendID = #{friendid,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorid != null" >
        creatorid = #{creatorid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where seqid = #{seqid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" >
    update front_income_info
    set incomeType = #{incometype,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      payType = #{paytype,jdbcType=VARCHAR},
      virtualMoney = #{virtualmoney,jdbcType=REAL},
      userName = #{username,jdbcType=VARCHAR},
      payMoney = #{paymoney,jdbcType=REAL},
      discountMoney = #{discountmoney,jdbcType=REAL},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      accountID = #{accountid,jdbcType=VARCHAR},
      addScore = #{addscore,jdbcType=INTEGER},
      friendID = #{friendid,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      creatorid = #{creatorid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where seqid = #{seqid,jdbcType=INTEGER}
  </update>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2019-03-04 11:42:34 ### -->



  <!-- Your codes goes here!!! -->
  
</mapper>